version: "3.9"
services:
  mysql8:
    container_name: mysql8
    image: mysql:8
    ports:
      - "3307:3306"
    env_file: ./.env
    environment:
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
      MYSQL_DATABASE: $MYSQL_DATABASE
    volumes:
      - data-mysql:/var/lib/mysql
    restart: always
    healthcheck:
      test: "mysql -uroot -p$MYSQL_ROOT_PASSWORD $MYSQL_DATABASE -e 'select 1'"
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - spring
  postgres14:
    container_name: postgres14
    image: postgres:14-alpine
    ports:
      - "5532:5432"
    environment:
      POSTGRES_PASSWORD: sasa
      POSTGRES_DB: msvc_cursos
    volumes:
      - data-postgres:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - spring
  msvc-usuarios:
    container_name: msvc-usuarios
    build:
      context: ./
      dockerfile: ./msvc-usuarios/Dockerfile
    ports:
      - "8001:8001"
    env_file: ./msvc-usuarios/.env
    networks:
      - spring
    depends_on:
      mysql8:
        condition: service_healthy
    restart: always
    healthcheck:
      test: ["CMD", "wget", "http://localhost:8001/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
  msvc-cursos:
    container_name: msvc-cursos
    build:
      context: ./
      dockerfile: ./msvc-cursos/Dockerfile
    ports:
      - "8002:8002"
    env_file: ./msvc-cursos/.env
    networks:
      - spring
    depends_on:
      postgres14:
        condition: service_healthy
      msvc-usuarios:
        condition: service_healthy
    restart: always
volumes:
  data-mysql:
    name: data-mysql
  data-postgres:
    name: data-postgres
networks:
  spring:
    name: spring